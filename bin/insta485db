#!/bin/bash
# add this line to your command line so that you can run this script with db instead of ./bin/insta485db
# alias db="./bin/insta485db"
# ./bin/insta485db create becomes db create
# way more simple!!!

set -Eeuo pipefail
set -x

# Create the database.
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi


if [ "$1" = "create" ]; then
    mkdir -p var/uploads
    sqlite3 var/insta485.sqlite3 < sql/schema.sql
    sqlite3 var/insta485.sqlite3 < sql/data.sql
    cp sql/uploads/* var/uploads/
elif [ "$1" = "destroy" ]; then
    rm -rf var/insta485.sqlite3 var/uploads
elif [ "$1" = "reset" ]; then
    rm -rf var/insta485.sqlite3 var/uploads
    mkdir -p var/uploads
    sqlite3 var/insta485.sqlite3 < sql/schema.sql
    sqlite3 var/insta485.sqlite3 < sql/data.sql
    cp sql/uploads/* var/uploads/
elif [ "$1" = "dump" ]; then
    sqlite3 var/insta485.sqlite3 .dump
elif [ "$1" = "shell" ]; then
    sqlite3 var/insta485.sqlite3
elif [ "$1" = "random" ]; then
    SHUF=shuf
    # If shuf is not on this machine, try to use gshuf instead
    if ! type shuf 2> /dev/null; then
      SHUF=gshuf
    fi
    DB_FILENAME=var/insta485.sqlite3
    FILENAMES="122a7d27ca1d7420a1072f695d9290fad4501a41.jpg
               ad7790405c539894d25ab8dcf0b79eed3341e109.jpg
               9887e06812ef434d291e4936417d125cd594b38a.jpg
               2ec7cf8ae158b3b1f40065abfb33e81143707842.jpg"
    for i in $(seq 1 100); do
      FILENAME=$(echo "$FILENAMES" | ${SHUF} -n1 | awk '{$1=$1;print}')
      OWNER="awdeorio"
      sqlite3 -echo -batch ${DB_FILENAME} "INSERT INTO posts(filename, owner) VALUES('${FILENAME}', '${OWNER}');"
    done
  
else
    echo "Invalid command. Please use './insta485db (create|destroy|reset|dump)'."
fi
